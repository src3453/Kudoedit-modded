# 参考
# https://docs.github.com/ja/actions/learn-github-actions/workflow-syntax-for-github-actions#about-yaml-syntax-for-workflows

# Workflow名
name: Package into ZIP
# イベントトリガー
# Git Pushした時にこのワークフローを実行する
on:
  push:
    tags:
      - "*"

    

jobs:
  # job名(任意の名前で良い)
  Package-to-zip:
    # virtual machineの形式を指定
    runs-on: ubuntu-latest
    # jobのステップ
    steps:
      # 環境変数を使うパターン
      - uses: actions/checkout@v3
      - name: get tag name
        run: echo "TAG_NAME=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
      - name: mkdir
        run: |
          ls -al
          mkdir output
          cd output

      - uses: actions/checkout@v2
        name: clone this
        with:
          path: output
      # ステップ名
      - name: Minify & Stamp versions
        id: version
        run: | 
          cd output
          rm -rf ./.git
          rm -rf ./.github
          echo "x=Kudoedit.Modded.v${{env.TAG_NAME}}.$(echo "${{github.sha}}" | cut -c 1-7)" >> $GITHUB_ENV
          TMP=$(echo "${{github.sha}}" | cut -c 1-7)
          sed "s/VERSION/$TMP/" ./pack.mcmeta -i
          sed "s/TAG/${{env.TAG_NAME}}/" ./pack.mcmeta -i
          echo ::set-output name=filename::Kudoedit.Modded.v${{env.TAG_NAME}}.$TMP

      #- name: Archive production artifacts
      #  uses: actions/upload-artifact@v2
      #  with:
      #    name: ${{env.x}}
      #    path: output/
      
      - name: Archive
        run: |
          zip -r ${{env.x}}.zip ./output/ -x "*.git*"
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Kudoedit Modded! v${{env.TAG_NAME}}
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./${{ steps.version.outputs.filename }}.zip
          asset_name: ${{ steps.version.outputs.filename }}.zip
          asset_content_type: application/zip
      
